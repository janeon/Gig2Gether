import{s as ue,b as p,f as $,t as se,g as f,k as _,h as F,d as v,r as M,j as oe,l as r,i as j,m as e,v as pe,c as fe}from"../chunks/scheduler.Tn1ca7fi.js";import{S as me,i as he,b as G,d as J,m as X,a as Y,t as Z,e as ee}from"../chunks/index.CSvEDU_A.js";import{B as ce}from"../chunks/Button.s6uCLvz5.js";import{U as ve}from"../chunks/UploadSidebar.CwuGyvda.js";import{r as ge,h as $e,u as _e,i as be,T as xe,d as te,f as de,b as ae,e as we,w as ye}from"../chunks/client.Db5mx_yJ.js";import{P as Ce}from"../chunks/papaparse.min.BuI-pYrM.js";import{p as De}from"../chunks/stores.SUmdyQM3.js";function Se(g){let a;return{c(){a=se("Upload Screenshots")},l(l){a=oe(l,"Upload Screenshots")},m(l,c){j(l,a,c)},d(l){l&&v(a)}}}function Ue(g){let a;return{c(){a=se("Manual Upload")},l(l){a=oe(l,"Manual Upload")},m(l,c){j(l,a,c)},d(l){l&&v(a)}}}function Ve(g){let a,l,c,b,x,R,n,w,B="We are collecting Quest offers to assess their quality, fairness, and achievability across drivers.",s,o,i="Quests include those that were:",E,y,q="<li>Received and not accepted</li> <li>Received but not completed</li> <li>Received and completed</li>",k,h,H="Quest information can be entered manually or via screenshot uploads.",P,D,m,I,N,Q,C,A,S,K,U,O,L,le='<i class="fas fa-play fa-2x mr-2"></i> <span>Learn more on how to add files or enter details</span>',z,W,ne;return x=new ve({}),S=new ce({props:{class:"bg-black text-white rounded px-6 py-3",size:"xl",href:"/protected/quest-screenshot",$$slots:{default:[Se]},$$scope:{ctx:g}}}),U=new ce({props:{class:"bg-black text-white rounded px-6 py-3",size:"xl",href:"/protected/manual-quests",$$slots:{default:[Ue]},$$scope:{ctx:g}}}),{c(){a=p("link"),l=$(),c=p("div"),b=p("div"),G(x.$$.fragment),R=$(),n=p("div"),w=p("p"),w.textContent=B,s=$(),o=p("p"),o.textContent=i,E=$(),y=p("ul"),y.innerHTML=q,k=$(),h=p("p"),h.textContent=H,P=$(),D=p("div"),m=p("div"),I=p("label"),N=se("Upload CSV"),Q=$(),C=p("input"),A=$(),G(S.$$.fragment),K=$(),G(U.$$.fragment),O=$(),L=p("div"),L.innerHTML=le,this.h()},l(t){a=f(t,"LINK",{rel:!0,href:!0}),l=_(t),c=f(t,"DIV",{class:!0});var u=F(c);b=f(u,"DIV",{class:!0});var T=F(b);J(x.$$.fragment,T),T.forEach(v),R=_(u),n=f(u,"DIV",{class:!0});var d=F(n);w=f(d,"P",{class:!0,"data-svelte-h":!0}),M(w)!=="svelte-ihj9wl"&&(w.textContent=B),s=_(d),o=f(d,"P",{"data-svelte-h":!0}),M(o)!=="svelte-1sekmii"&&(o.textContent=i),E=_(d),y=f(d,"UL",{class:!0,"data-svelte-h":!0}),M(y)!=="svelte-1r4kkpz"&&(y.innerHTML=q),k=_(d),h=f(d,"P",{class:!0,"data-svelte-h":!0}),M(h)!=="svelte-1g5548b"&&(h.textContent=H),P=_(d),D=f(d,"DIV",{class:!0});var re=F(D);m=f(re,"DIV",{class:!0});var V=F(m);I=f(V,"LABEL",{class:!0,for:!0});var ie=F(I);N=oe(ie,"Upload CSV"),ie.forEach(v),Q=_(V),C=f(V,"INPUT",{id:!0,type:!0,accept:!0,autocomplete:!0,class:!0}),A=_(V),J(S.$$.fragment,V),K=_(V),J(U.$$.fragment,V),V.forEach(v),re.forEach(v),O=_(d),L=f(d,"DIV",{class:!0,"data-svelte-h":!0}),M(L)!=="svelte-k3iify"&&(L.innerHTML=le),d.forEach(v),u.forEach(v),this.h()},h(){r(a,"rel","stylesheet"),r(a,"href","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"),r(b,"class","w-1/4"),r(w,"class","mb-3"),r(y,"class","max-w-md mx-auto space-y-1 list-disc list-inside"),r(h,"class","mt-4"),r(I,"class","pb-2"),r(I,"for",g[0].id),r(C,"id",g[0].id),r(C,"type","file"),r(C,"accept",".csv"),r(C,"autocomplete","off"),r(C,"class","mt-1"),r(m,"class","flex flex-col items-center space-y-4 ml-56"),r(D,"class","flex justify-start mt-6"),r(L,"class","flex items-center mt-4 ml-59 text-black cursor-pointer"),r(n,"class","w-3/4 rounded-md p-6"),r(c,"class","flex flex-row")},m(t,u){j(t,a,u),j(t,l,u),j(t,c,u),e(c,b),X(x,b,null),e(c,R),e(c,n),e(n,w),e(n,s),e(n,o),e(n,E),e(n,y),e(n,k),e(n,h),e(n,P),e(n,D),e(D,m),e(m,I),e(I,N),e(m,Q),e(m,C),e(m,A),X(S,m,null),e(m,K),X(U,m,null),e(n,O),e(n,L),z=!0,W||(ne=pe(C,"change",g[1]),W=!0)},p(t,[u]){const T={};u&128&&(T.$$scope={dirty:u,ctx:t}),S.$set(T);const d={};u&128&&(d.$$scope={dirty:u,ctx:t}),U.$set(d)},i(t){z||(Y(x.$$.fragment,t),Y(S.$$.fragment,t),Y(U.$$.fragment,t),z=!0)},o(t){Z(x.$$.fragment,t),Z(S.$$.fragment,t),Z(U.$$.fragment,t),z=!1},d(t){t&&(v(a),v(l),v(c)),ee(x),ee(S),ee(U),W=!1,ne()}}}function Ie(g,a,l){let c;fe(g,De,s=>l(2,c=s));let b={id:"quest_csv"},x=new Date().toISOString().substring(0,10);async function R(s){const o=s.target;if(o.files.length>0){const i=o.files[0];await n(i)}}async function n(s){if(s){console.log("File selected for upload:",s.name);try{const o=ge($e,`uploads/${s.name}`);await _e(o,s),console.log("File uploaded to storage:",s.name);const i=await be(o);console.log("File download URL:",i),await w(s,i),console.log("File uploaded and metadata saved:",s.name)}catch(o){console.error("Error uploading file:",o)}}else console.error("No file selected")}async function w(s,o){Ce.parse(s,{header:!0,async complete(i){console.log("Parsed CSV data:",i.data),await B(i.data,o)},error(i){console.error("Error parsing CSV file:",i)}})}async function B(s,o){const i=c.data.user;if(!i||!i.uid){console.error("User is not logged in");return}const E=xe.fromDate(new Date(x)),y=te(de(ae,"users",i.uid,"uploads")).id,q=te(ae,"users",i.uid,"uploads",y);await we(q,{name:b.id,url:o,date:E});const k=ye(ae);s.forEach((h,H)=>{const P=te(de(q,"quests"),`quest_${H}`),D={...h,date:E,csvDownloadURL:o};k.set(P,D)});try{await k.commit(),console.log("CSV data successfully uploaded to Firestore.")}catch(h){console.error("Error uploading CSV data to Firestore:",h)}}return[b,R]}class Te extends me{constructor(a){super(),he(this,a,Ie,Ve,ue,{})}}export{Te as component};
