import{s as ae,b as g,f as C,t as G,g as v,k as V,h as I,d as p,r as Z,j as J,l,i as k,m as c,v as se,c as oe}from"../chunks/scheduler.Tn1ca7fi.js";import{S as re,i as ne,b as j,d as M,m as N,a as q,t as A,e as H}from"../chunks/index.CSvEDU_A.js";import{B as ee}from"../chunks/Button.s6uCLvz5.js";import{U as le}from"../chunks/UploadSidebar.CwuGyvda.js";import{r as ce,h as ie,u as de,i as ue,T as pe,d as K,f as te,b as O,e as fe,w as me}from"../chunks/client.Db5mx_yJ.js";import{P as he}from"../chunks/papaparse.min.BuI-pYrM.js";import{p as $e}from"../chunks/stores.SUmdyQM3.js";function ge(f){let a;return{c(){a=G("Upload Screenshots")},l(r){a=J(r,"Upload Screenshots")},m(r,n){k(r,a,n)},d(r){r&&p(a)}}}function ve(f){let a;return{c(){a=G("Manual Upload")},l(r){a=J(r,"Manual Upload")},m(r,n){k(r,a,n)},d(r){r&&p(a)}}}function _e(f){let a,r,n,_,b,E,d,w,P="Trips information are collected per ride, and both trip offers and summaries can be entered manually or via screenshot uploads.",s,o,e,m,F,U,u,D,h,L,$,z,S,Q='<i class="fas fa-play fa-2x mr-2"></i> <span>Learn more on how to add files or enter details</span>',R,B,W;return b=new le({}),h=new ee({props:{class:"bg-black text-white rounded px-6 py-3",size:"xl",href:"/protected/trip-screenshot",$$slots:{default:[ge]},$$scope:{ctx:f}}}),$=new ee({props:{class:"bg-black text-white rounded px-6 py-3",size:"xl",href:"/protected/manual-trips",$$slots:{default:[ve]},$$scope:{ctx:f}}}),{c(){a=g("link"),r=C(),n=g("div"),_=g("div"),j(b.$$.fragment),E=C(),d=g("div"),w=g("p"),w.textContent=P,s=C(),o=g("div"),e=g("div"),m=g("label"),F=G("Upload CSV"),U=C(),u=g("input"),D=C(),j(h.$$.fragment),L=C(),j($.$$.fragment),z=C(),S=g("div"),S.innerHTML=Q,this.h()},l(t){a=v(t,"LINK",{rel:!0,href:!0}),r=V(t),n=v(t,"DIV",{class:!0});var i=I(n);_=v(i,"DIV",{class:!0});var T=I(_);M(b.$$.fragment,T),T.forEach(p),E=V(i),d=v(i,"DIV",{class:!0});var x=I(d);w=v(x,"P",{class:!0,"data-svelte-h":!0}),Z(w)!=="svelte-y8oszz"&&(w.textContent=P),s=V(x),o=v(x,"DIV",{class:!0});var X=I(o);e=v(X,"DIV",{class:!0});var y=I(e);m=v(y,"LABEL",{class:!0,for:!0});var Y=I(m);F=J(Y,"Upload CSV"),Y.forEach(p),U=V(y),u=v(y,"INPUT",{id:!0,type:!0,accept:!0,autocomplete:!0,class:!0}),D=V(y),M(h.$$.fragment,y),L=V(y),M($.$$.fragment,y),y.forEach(p),X.forEach(p),z=V(x),S=v(x,"DIV",{class:!0,"data-svelte-h":!0}),Z(S)!=="svelte-11tx84z"&&(S.innerHTML=Q),x.forEach(p),i.forEach(p),this.h()},h(){l(a,"rel","stylesheet"),l(a,"href","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"),l(_,"class","w-1/4"),l(w,"class","mb-3"),l(m,"class","pb-2"),l(m,"for",f[0].id),l(u,"id",f[0].id),l(u,"type","file"),l(u,"accept",".csv"),l(u,"autocomplete","off"),l(u,"class","mt-1"),l(e,"class","flex flex-col items-center space-y-4 ml-56"),l(o,"class","flex justify-start mt-6"),l(S,"class","flex items-center mt-4 ml-49 text-black cursor-pointer"),l(d,"class","w-3/4 rounded-md p-6"),l(n,"class","flex flex-row")},m(t,i){k(t,a,i),k(t,r,i),k(t,n,i),c(n,_),N(b,_,null),c(n,E),c(n,d),c(d,w),c(d,s),c(d,o),c(o,e),c(e,m),c(m,F),c(e,U),c(e,u),c(e,D),N(h,e,null),c(e,L),N($,e,null),c(d,z),c(d,S),R=!0,B||(W=se(u,"change",f[1]),B=!0)},p(t,[i]){const T={};i&128&&(T.$$scope={dirty:i,ctx:t}),h.$set(T);const x={};i&128&&(x.$$scope={dirty:i,ctx:t}),$.$set(x)},i(t){R||(q(b.$$.fragment,t),q(h.$$.fragment,t),q($.$$.fragment,t),R=!0)},o(t){A(b.$$.fragment,t),A(h.$$.fragment,t),A($.$$.fragment,t),R=!1},d(t){t&&(p(a),p(r),p(n)),H(b),H(h),H($),B=!1,W()}}}function be(f,a,r){let n;oe(f,$e,s=>r(2,n=s));let _={id:"trip_csv"},b=new Date().toISOString().substring(0,10);async function E(s){const o=s.target;if(o.files.length>0){const e=o.files[0];await d(e)}}async function d(s){if(s){console.log("File selected for upload:",s.name);try{const o=ce(ie,`uploads/${s.name}`);await de(o,s),console.log("File uploaded to storage:",s.name);const e=await ue(o);console.log("File download URL:",e),await w(s,e),console.log("File uploaded and metadata saved:",s.name)}catch(o){console.error("Error uploading file:",o)}}else console.error("No file selected")}async function w(s,o){he.parse(s,{header:!0,async complete(e){console.log("Parsed CSV data:",e.data),await P(e.data,o)},error(e){console.error("Error parsing CSV file:",e)}})}async function P(s,o){const e=n.data.user;if(!e||!e.uid){console.error("User is not logged in");return}const m=pe.fromDate(new Date(b)),F=K(te(O,"users",e.uid,"uploads")).id,U=K(O,"users",e.uid,"uploads",F);await fe(U,{name:_.id,url:o,date:m});const u=me(O);s.forEach((D,h)=>{const L=K(te(U,"trips"),`trip_${h}`),$={...D,date:m,csvDownloadURL:o};u.set(L,$)});try{await u.commit(),console.log("CSV data successfully uploaded to Firestore.")}catch(D){console.error("Error uploading CSV data to Firestore:",D)}}return[_,E]}class Ue extends re{constructor(a){super(),ne(this,a,be,_e,ae,{})}}export{Ue as component};
